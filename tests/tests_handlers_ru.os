#Использовать asserts
#Использовать oint
#Использовать "./internal"

Перем TestTools;

#Область Тесты

&ТестовыйНабор(Характер = "Одиночка")
Процедура ПриСозданииОбъекта()
	
	TestTools = Новый TestTools("ru");
	
КонецПроцедуры

&ПараметризованныйТест
&ИсточникЗначение("1921", "R:\DockerVolumes\Melezh-RPM-RU")
&ИсточникЗначение("1922", "R:\DockerVolumes\Melezh-RPM-EN")
&ИсточникЗначение("1923", "R:\DockerVolumes\Melezh-DEB-RU")
&ИсточникЗначение("1924", "R:\DockerVolumes\Melezh-DEB-EN")
Процедура Get(Порт, КаталогПроекта) Экспорт
	
	Результат = OPI_ЗапросыHTTP
	.НовыйЗапрос()
	.Инициализировать(СтрШаблон("http://localhost:%1/echo_get", Порт))
	.УстановитьПараметрыURL(Новый Структура("field3,field2", "New field3", "New field2"))
	.ОбработатьЗапрос("GET")
	.ВернутьОтветКакJSONКоллекцию();
	
	Если ТипЗнч(Результат) = Тип("OPI_HTTPКлиент") Тогда
		Результат = Результат.ПолучитьЛог();
	КонецЕсли;
	
	Ожидаем.Что(Результат["result"]).Равно(Истина);
	Ожидаем.Что(Результат["data"]["field1"]).Равно("Field 1 value");
	Ожидаем.Что(Результат["data"]["field2"]).Равно("Field 2 value (strict)");
	Ожидаем.Что(Результат["data"]["field3"]).Равно("New field3");
	
	Логи = ПолучитьЛоги(КаталогПроекта + "\logs\echo_get");

	Ожидаем.Что(Логи["Тело"]).Равно(Неопределено);
	Ожидаем.Что(Логи["Заголовки"]).Заполнено();
	Ожидаем.Что(Логи["Инфо"]).Заполнено();
	Ожидаем.Что(Логи["Ответ"]).Заполнено();

	Ответ = Логи["Ответ"];
	Ожидаем.Что(Ответ["result"]).Равно(Истина);
	Ожидаем.Что(Ответ["data"]["field1"]).Равно("Field 1 value");
	Ожидаем.Что(Ответ["data"]["field2"]).Равно("Field 2 value (strict)");
	Ожидаем.Что(Ответ["data"]["field3"]).Равно("New field3");

	Инфо = Логи["Инфо"];
	Ожидаем.Что(Инфо["method"]).Равно("GET");
	Ожидаем.Что(Инфо["size"]).Равно(0);
	Ожидаем.Что(Инфо["status"]).Равно(200);
	Ожидаем.Что(Инфо["handler"]).Равно("echo_get");
	Ожидаем.Что(Инфо["params"]).ИмеетДлину(2);
	Ожидаем.Что(Инфо["params"]["field3"]).Равно("New field3");
	Ожидаем.Что(Инфо["params"]["field2"]).Равно("New field2");
	
КонецПроцедуры

&ПараметризованныйТест
&ИсточникЗначение("1921", "R:\DockerVolumes\Melezh-RPM-RU")
&ИсточникЗначение("1922", "R:\DockerVolumes\Melezh-RPM-EN")
&ИсточникЗначение("1923", "R:\DockerVolumes\Melezh-DEB-RU")
&ИсточникЗначение("1924", "R:\DockerVolumes\Melezh-DEB-EN")
Процедура Json(Порт, КаталогПроекта) Экспорт
	
	Результат = OPI_ЗапросыHTTP
	.НовыйЗапрос()
	.Инициализировать(СтрШаблон("http://localhost:%1/echo_json", Порт))
	.УстановитьJsonТело(Новый Структура("field3,field2", "New field3", "New field2"))
	.ОбработатьЗапрос("POST")
	.ВернутьОтветКакJSONКоллекцию();
	
	Если ТипЗнч(Результат) = Тип("OPI_HTTPКлиент") Тогда
		Результат = Результат.ПолучитьЛог();
	КонецЕсли;
	
	Ожидаем.Что(Результат["result"]).Равно(Истина);
	Ожидаем.Что(Результат["data"]["field1"]).Равно("Field 1 value");
	Ожидаем.Что(Результат["data"]["field2"]).Равно("Field 2 value (strict)");
	Ожидаем.Что(Результат["data"]["field3"]).Равно("New field3");
	
	Логи = ПолучитьЛоги(КаталогПроекта + "\logs\echo_json");

	Ожидаем.Что(Логи["Тело"]).Заполнено();
	Ожидаем.Что(Логи["Заголовки"]).Заполнено();
	Ожидаем.Что(Логи["Инфо"]).Заполнено();
	Ожидаем.Что(Логи["Ответ"]).Заполнено();

	Тело = Логи["Тело"];
	Ожидаем.Что(Тело["field2"]).Равно("New field2");
	Ожидаем.Что(Тело["field3"]).Равно("New field3");

	Ответ = Логи["Ответ"];
	Ожидаем.Что(Ответ["result"]).Равно(Истина);
	Ожидаем.Что(Ответ["data"]["field1"]).Равно("Field 1 value");
	Ожидаем.Что(Ответ["data"]["field2"]).Равно("Field 2 value (strict)");
	Ожидаем.Что(Ответ["data"]["field3"]).Равно("New field3");

	Инфо = Логи["Инфо"];
	Ожидаем.Что(Инфо["method"]).Равно("POST");
	Ожидаем.Что(Инфо["size"]).Равно(55);
	Ожидаем.Что(Инфо["status"]).Равно(200);
	Ожидаем.Что(Инфо["handler"]).Равно("echo_json");
	Ожидаем.Что(Инфо["params"]).ИмеетДлину(0);
		
КонецПроцедуры

&ПараметризованныйТест
&ИсточникЗначение("1921", "R:\DockerVolumes\Melezh-RPM-RU")
&ИсточникЗначение("1922", "R:\DockerVolumes\Melezh-RPM-EN")
&ИсточникЗначение("1923", "R:\DockerVolumes\Melezh-DEB-RU")
&ИсточникЗначение("1924", "R:\DockerVolumes\Melezh-DEB-EN")
Процедура FormUE(Порт, КаталогПроекта) Экспорт
	
	Результат = OPI_ЗапросыHTTP
	.НовыйЗапрос()
	.Инициализировать(СтрШаблон("http://localhost:%1/echo_form", Порт))
	.УстановитьFormТело(Новый Структура("field3,field2", "New field3", "New field2"))
	.ОбработатьЗапрос("POST")
	.ВернутьОтветКакJSONКоллекцию();
	
	Если ТипЗнч(Результат) = Тип("OPI_HTTPКлиент") Тогда
		Результат = Результат.ПолучитьЛог();
	КонецЕсли;
	
	Ожидаем.Что(Результат["result"]).Равно(Истина);
	Ожидаем.Что(Результат["data"]["field1"]).Равно("Field 1 value");
	Ожидаем.Что(Результат["data"]["field2"]).Равно("Field 2 value (strict)");
	Ожидаем.Что(Результат["data"]["field3"]).Равно("New field3");
	
	Логи = ПолучитьЛоги(КаталогПроекта + "\logs\echo_form");

	Ожидаем.Что(Логи["Тело"]).Заполнено();
	Ожидаем.Что(Логи["Заголовки"]).Заполнено();
	Ожидаем.Что(Логи["Инфо"]).Заполнено();
	Ожидаем.Что(Логи["Ответ"]).Заполнено();

	Тело = Логи["Тело"];
	Ожидаем.Что(Тело["field2"]).Равно("New field2");
	Ожидаем.Что(Тело["field3"]).Равно("New field3");

	Ответ = Логи["Ответ"];
	Ожидаем.Что(Ответ["result"]).Равно(Истина);
	Ожидаем.Что(Ответ["data"]["field1"]).Равно("Field 1 value");
	Ожидаем.Что(Ответ["data"]["field2"]).Равно("Field 2 value (strict)");
	Ожидаем.Что(Ответ["data"]["field3"]).Равно("New field3");

	Инфо = Логи["Инфо"];
	Ожидаем.Что(Инфо["method"]).Равно("POST");
	Ожидаем.Что(Инфо["size"]).Равно(39);
	Ожидаем.Что(Инфо["status"]).Равно(200);
	Ожидаем.Что(Инфо["handler"]).Равно("echo_form");
	Ожидаем.Что(Инфо["params"]).ИмеетДлину(0);
		
КонецПроцедуры

&ПараметризованныйТест
&ИсточникЗначение("1921", "R:\DockerVolumes\Melezh-RPM-RU")
&ИсточникЗначение("1922", "R:\DockerVolumes\Melezh-RPM-EN")
&ИсточникЗначение("1923", "R:\DockerVolumes\Melezh-DEB-RU")
&ИсточникЗначение("1924", "R:\DockerVolumes\Melezh-DEB-EN")
Процедура FormMFD(Порт, КаталогПроекта) Экспорт
	
	Результат = OPI_ЗапросыHTTP
	.НовыйЗапрос()
	.Инициализировать(СтрШаблон("http://localhost:%1/echo_form", Порт))
	.НачатьЗаписьТелаMultipart()
	.ДобавитьФайлMultipartFormData("field1", "FILE1.png", "https://hut.openintegrations.dev/test_data/picture.jpg", "image/png")
	.ДобавитьФайлMultipartFormData("field2", "FILE2.png", "https://hut.openintegrations.dev/test_data/picture.jpg", "image/png")
	.ДобавитьПолеMultipartFormData("field3", "Text")
	.ОбработатьЗапрос("POST")
	.ВернутьОтветКакJSONКоллекцию();
	
	Если ТипЗнч(Результат) = Тип("OPI_HTTPКлиент") Тогда
		Результат = Результат.ПолучитьЛог();
	КонецЕсли;
	
	Ожидаем.Что(Результат["result"]).Равно(Истина);
	Ожидаем.Что(СтрНачинаетсяС(Результат["data"]["field1"], "/tmp")).Равно(Истина);
	Ожидаем.Что(Результат["data"]["field2"]).Равно("Field 2 value (strict)");
	Ожидаем.Что(Результат["data"]["field3"]).Равно("Text");

	КартинкаОригинал = "https://hut.openintegrations.dev/test_data/picture.jpg";
	OPI_ПреобразованиеТипов.ПолучитьДвоичныеДанные(КартинкаОригинал);

	Логи = ПолучитьЛоги(КаталогПроекта + "\logs\echo_form");

	Ожидаем.Что(Логи["Тело"]).Заполнено();
	Ожидаем.Что(Логи["Заголовки"]).Заполнено();
	Ожидаем.Что(Логи["Инфо"]).Заполнено();
	Ожидаем.Что(Логи["Ответ"]).Заполнено();

	Тело = Логи["Тело"];
	Ожидаем.Что(Тело).ИмеетДлину(2);
	Ожидаем.Что(Тело["melezh_request_files"]).ИмеетТип("Массив").ИмеетДлину(2);
	Ожидаем.Что(Тело["field3"]).Равно("Text");

	Ответ = Логи["Ответ"];
	Ожидаем.Что(Ответ["result"]).Равно(Истина);
	Ожидаем.Что(СтрНачинаетсяС(Ответ["data"]["field1"], "/tmp")).Равно(Истина);
	Ожидаем.Что(Ответ["data"]["field2"]).Равно("Field 2 value (strict)");
	Ожидаем.Что(Ответ["data"]["field3"]).Равно("Text");

	Инфо = Логи["Инфо"];
	Ожидаем.Что(Инфо["method"]).Равно("POST");
	Ожидаем.Что(Инфо["size"]).Равно(КартинкаОригинал.Размер() * 2 + 397);
	Ожидаем.Что(Инфо["status"]).Равно(200);
	Ожидаем.Что(Инфо["handler"]).Равно("echo_form");
	Ожидаем.Что(Инфо["params"]).ИмеетДлину(0);
		
КонецПроцедуры

#КонецОбласти

Функция ПолучитьЛоги(КаталогПроекта)
	
	ФайлыЛогов      = НайтиФайлы(КаталогПроекта, "*", Истина);
	МассивПутей     = Новый Массив;
	МассивКаталогов = Новый Массив;
	Логи            = Новый Соответствие();
	
	Для Каждого Файл Из ФайлыЛогов Цикл
		
		Если Файл.ЭтоКаталог() Тогда
			МассивКаталогов.Добавить(Файл.ПолноеИмя);
			Продолжить;
		Иначе
			
			Если Файл.Имя = "req.info" Тогда
				Логи.Вставить("Инфо", ПрочестьJSONФайл(Файл.ПолноеИмя));
			ИначеЕсли Файл.Имя = "req.headers" Тогда
				Логи.Вставить("Заголовки", ПрочестьJSONФайл(Файл.ПолноеИмя));
			ИначеЕсли Файл.Имя = "req.body" Тогда
				Логи.Вставить("Тело", ПрочестьJSONФайл(Файл.ПолноеИмя));
			ИначеЕсли Файл.Имя = "res.body" Тогда
				Логи.Вставить("Ответ", ПрочестьJSONФайл(Файл.ПолноеИмя));
			ИначеЕсли Файл.Имя = "error.json" Тогда
				ВызватьИсключение ПрочестьJSONФайл(Файл.ПолноеИмя);
			КонецЕсли;
			
			МассивПутей.Добавить(Файл.ПолноеИмя);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого Путь Из МассивПутей Цикл
		УдалитьФайлы(Путь);
	КонецЦикла;
	
	Для Каждого Каталог Из МассивКаталогов Цикл
		Попытка
		УдалитьФайлы(Каталог);
		Исключение Продолжить; КонецПопытки;
	КонецЦикла;

	Возврат Логи;
	
КонецФункции

Функция ПрочестьJSONФайл(Знач Путь)
	
	ЧтениеJSON = Новый ЧтениеJSON();
	ЧтениеJSON.ОткрытьФайл(Путь);
	Результат  = ПрочитатьJSON(ЧтениеJSON, Истина);
	ЧтениеJSON.Закрыть();

	Возврат Результат;

КонецФункции