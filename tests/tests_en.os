#Использовать asserts
#Использовать "./internal"

Перем ПутьПроекта;
Перем КлючОбработчика;
Перем TestTools;

#Область Тесты

&ТестовыйНабор(Характер = "Одиночка")
Процедура ПриСозданииОбъекта()
	
	TestTools = Новый TestTools("en");
	
	Если Не ЗначениеЗаполнено(ПутьПроекта) Тогда
		ПутьПроекта = ПолучитьИмяВременногоФайла();
		
		Опции = Новый Структура;
		Опции.Вставить("path", ПутьПроекта);
		
		Результат = TestTools.ВыполнитьТестCLI("CreateProject", Опции);	
	КонецЕсли;
	
КонецПроцедуры

&Порядок(1)
&Тест
Процедура CreateProject() Экспорт
	
	Проект = ПолучитьИмяВременногоФайла();
	
	Опции = Новый Структура;
	Опции.Вставить("path", Проект);
	
	Результат = TestTools.ВыполнитьТестCLI("CreateProject", Опции);
	
	Ожидаем.Что(Результат["path"]).Равно(Проект);
	Ожидаем.Что(Результат["result"]).Равно(Истина);
	
	TestTools.ЗаписатьЛог(Результат, "CreateProject");
	
	УдалитьФайлы(Проект);
	
КонецПроцедуры

&Порядок(2)
&Тест
Процедура GetProjectSettings() Экспорт
	
	Опции = Новый Структура;
	Опции.Вставить("proj", ПутьПроекта);
	
	Результат = TestTools.ВыполнитьТестCLI("GetProjectSettings", Опции);
	
	Ожидаем.Что(Результат["result"]).Равно(Истина);
	Ожидаем.Что(Результат["data"]).ИмеетТип("Массив");
	
	TestTools.ЗаписатьЛог(Результат, "GetProjectSettings");
	
КонецПроцедуры

&Порядок(3)
&Тест
Процедура FillProjectSettings() Экспорт
	
	Настройки = Новый Соответствие();
	Настройки.Вставить("logs_req_headers", Ложь);
	Настройки.Вставить("logs_req_body"   , Ложь);
	
	Опции = Новый Структура;
	Опции.Вставить("proj", ПутьПроекта);
	Опции.Вставить("set" , Настройки);
	
	Результат = TestTools.ВыполнитьТестCLI("FillProjectSettings", Опции);
	
	Ожидаем.Что(Результат["result"]).Равно(Истина);
	
	TestTools.ЗаписатьЛог(Результат, "FillProjectSettings");
	
	Опции.Удалить("set");
	
	Результат = TestTools.ВыполнитьТестCLI("GetProjectSettings", Опции, Ложь);
	Headers   = Ложь;
	Body      = Ложь;
	
	Для Каждого ТекущаяНастройка Из Результат["data"] Цикл
		
		Если ТекущаяНастройка["name"] = "logs_req_headers" Тогда
			Ожидаем.Что(ТекущаяНастройка["value"]).Равно("false");
			Headers = Истина;
		КонецЕсли;
		
		Если ТекущаяНастройка["name"] = "logs_req_body" Тогда
			Ожидаем.Что(ТекущаяНастройка["value"]).Равно("false");
			Body = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Ожидаем.Что(Headers И Body).Равно(Истина);
	
КонецПроцедуры

&Порядок(4)
&Тест
Процедура SetProjectSetting() Экспорт
	
	Опции = Новый Структура;
	Опции.Вставить("proj" , ПутьПроекта);
	Опции.Вставить("key"  , "logs_path");
	Опции.Вставить("value", "yo");
	
	Результат = TestTools.ВыполнитьТестCLI("SetProjectSetting", Опции);
	
	Ожидаем.Что(Результат["result"]).Равно(Истина);
	
	TestTools.ЗаписатьЛог(Результат, "SetProjectSetting");
	
	Опции.Удалить("key");
	Опции.Удалить("value");
	
	Результат = TestTools.ВыполнитьТестCLI("GetProjectSettings", Опции, Ложь);
	Path      = Ложь;
	
	Для Каждого ТекущаяНастройка Из Результат["data"] Цикл
		
		Если ТекущаяНастройка["name"] = "logs_path" Тогда
			Ожидаем.Что(ТекущаяНастройка["value"]).Равно("yo");
			Path = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Ожидаем.Что(Path).Равно(Истина);
	
КонецПроцедуры

&Порядок(5)
&Тест
Процедура AddRequestsHandler() Экспорт
	
	Библиотека = "telegram";
	МетодОПИ   = "SendTextMessage";
	МетодHTTP  = "get";
	
	Опции = Новый Структура;
	Опции.Вставить("proj"  , ПутьПроекта);
	Опции.Вставить("lib"   , Библиотека);
	Опции.Вставить("func"  , МетодОПИ);
	Опции.Вставить("method", МетодHTTP);
	
	Результат = TestTools.ВыполнитьТестCLI("AddRequestsHandler", Опции);
	
	КлючОбработчика = Результат["key"];
	
	Ожидаем.Что(Результат["result"]).Равно(Истина);
	Ожидаем.Что(КлючОбработчика).Заполнено();
	Ожидаем.Что(Результат["url_example"]).Заполнено();
	
	TestTools.ЗаписатьЛог(Результат, "AddRequestsHandler");	
	
КонецПроцедуры

&Порядок(6)
&Тест
Процедура GetRequestsHandlersList() Экспорт
	
	Опции = Новый Структура;
	Опции.Вставить("proj", ПутьПроекта);
	
	Результат = TestTools.ВыполнитьТестCLI("GetRequestsHandlersList", Опции);
	
	Ожидаем.Что(Результат["result"]).Равно(Истина);
	Ожидаем.Что(Результат["data"]).ИмеетТип("Массив").ИмеетДлину(1);
	
	TestTools.ЗаписатьЛог(Результат, "GetRequestsHandlersList");
	
КонецПроцедуры

&Порядок(7)
&Тест
Процедура GetRequestsHandler() Экспорт

	Опции = Новый Структура;
	Опции.Вставить("proj"   , ПутьПроекта);
	Опции.Вставить("handler", КлючОбработчика);

	Результат = TestTools.ВыполнитьТестCLI("GetRequestsHandler", Опции);
	
	Ожидаем.Что(Результат["result"]).Равно(Истина);
	Ожидаем.Что(Результат["data"]).ИмеетТип("Соответствие");
	Ожидаем.Что(Результат["data"]["function"]).Равно("SendTextMessage");
	Ожидаем.Что(Результат["data"]["library"]).Равно("telegram");
	Ожидаем.Что(Результат["data"]["method"]).Равно("GET");
	Ожидаем.Что(Результат["data"]["key"]).Равно(КлючОбработчика);
	Ожидаем.Что(Результат["data"]["active"]).Равно(1);
	Ожидаем.Что(Результат["data"]["args"]).ИмеетТип("Массив").ИмеетДлину(0);
	
	TestTools.ЗаписатьЛог(Результат, "GetRequestsHandler");

КонецПроцедуры

&Порядок(8)
&Тест

Процедура UpdateRequestsHandler() Экспорт

	Опции = Новый Структура;
	Опции.Вставить("proj"   , ПутьПроекта);
	Опции.Вставить("handler", КлючОбработчика);
	Опции.Вставить("lib"    , "vk");
	Опции.Вставить("func"   , "CreatePost");
	Опции.Вставить("method" , "FORM");

	_Результат = TestTools.ВыполнитьТестCLI("UpdateRequestsHandler", Опции);

	Ожидаем.Что(_Результат["result"]).Равно(Истина);

	Опции = Новый Структура;
	Опции.Вставить("proj"   , ПутьПроекта);
	Опции.Вставить("handler", КлючОбработчика);

	Результат = TestTools.ВыполнитьТестCLI("GetRequestsHandler", Опции, Ложь);

	Ожидаем.Что(Результат["result"]).Равно(Истина);
	Ожидаем.Что(Результат["data"]).ИмеетТип("Соответствие");
	Ожидаем.Что(Результат["data"]["function"]).Равно("CreatePost");
	Ожидаем.Что(Результат["data"]["library"]).Равно("vk");
	Ожидаем.Что(Результат["data"]["method"]).Равно("FORM");

	Опции = Новый Структура;
	Опции.Вставить("proj"   , ПутьПроекта);
	Опции.Вставить("handler", КлючОбработчика);
	Опции.Вставить("lib"    , "airtable");

	Результат = TestTools.ВыполнитьТестCLI("UpdateRequestsHandler", Опции, Ложь);

	Ожидаем.Что(Результат["result"]).Равно(Истина);

	Опции = Новый Структура;
	Опции.Вставить("proj"   , ПутьПроекта);
	Опции.Вставить("handler", КлючОбработчика);

	Результат = TestTools.ВыполнитьТестCLI("GetRequestsHandler", Опции, Ложь);

	Ожидаем.Что(Результат["result"]).Равно(Истина);
	Ожидаем.Что(Результат["data"]).ИмеетТип("Соответствие");
	Ожидаем.Что(Результат["data"]["function"]).Равно("CreatePost");
	Ожидаем.Что(Результат["data"]["library"]).Равно("airtable");
	Ожидаем.Что(Результат["data"]["method"]).Равно("FORM");

	TestTools.ЗаписатьЛог(_Результат, "UpdateRequestsHandler");

	Опции = Новый Структура;
	Опции.Вставить("proj"   , ПутьПроекта);
	Опции.Вставить("handler", КлючОбработчика);
	Опции.Вставить("lib"    , "vk");

	Результат = TestTools.ВыполнитьТестCLI("UpdateRequestsHandler", Опции, Ложь);

КонецПроцедуры

&Порядок(9)
&Тест
Процедура DisableRequestsHandler() Экспорт

	Опции = Новый Структура;
	Опции.Вставить("proj"   , ПутьПроекта);
	Опции.Вставить("handler", КлючОбработчика);

	_Результат = TestTools.ВыполнитьТестCLI("DisableRequestsHandler", Опции);
	
	Ожидаем.Что(_Результат["result"]).Равно(Истина);
	
	Результат = TestTools.ВыполнитьТестCLI("GetRequestsHandler", Опции, Ложь);

	Ожидаем.Что(Результат["result"]).Равно(Истина);
	Ожидаем.Что(Результат["data"]["active"]).Равно(0);

	TestTools.ЗаписатьЛог(_Результат, "DisableRequestsHandler");
	
КонецПроцедуры

&Порядок(10)
&Тест
Процедура EnableRequestsHandler() Экспорт

	Опции = Новый Структура;
	Опции.Вставить("proj"   , ПутьПроекта);
	Опции.Вставить("handler", КлючОбработчика);

	_Результат = TestTools.ВыполнитьТестCLI("EnableRequestsHandler", Опции);
	
	Ожидаем.Что(_Результат["result"]).Равно(Истина);
	
	Результат = TestTools.ВыполнитьТестCLI("GetRequestsHandler", Опции, Ложь);

	Ожидаем.Что(Результат["result"]).Равно(Истина);
	Ожидаем.Что(Результат["data"]["active"]).Равно(1);

	TestTools.ЗаписатьЛог(_Результат, "EnableRequestsHandler");
	
КонецПроцедуры

&Порядок(11)
&Тест
Процедура UpdateHandlersKey() Экспорт

	Опции = Новый Структура;
	Опции.Вставить("proj"   , ПутьПроекта);
	Опции.Вставить("handler", КлючОбработчика);

	_Результат = TestTools.ВыполнитьТестCLI("UpdateHandlersKey", Опции);
	
	Ожидаем.Что(_Результат["result"]).Равно(Истина);
	Ожидаем.Что(_Результат["data"]["key"] = КлючОбработчика).Равно(Ложь);

	КлючОбработчика = _Результат["data"]["key"];

	Опции = Новый Структура;
	Опции.Вставить("proj"   , ПутьПроекта);
	Опции.Вставить("handler", КлючОбработчика);
	Опции.Вставить("key"    , "my-key");

	Результат = TestTools.ВыполнитьТестCLI("UpdateHandlersKey", Опции);

	Ожидаем.Что(Результат["result"]).Равно(Истина);
	Ожидаем.Что(Результат["data"]["key"]).Равно("my-key");

	КлючОбработчика = Результат["data"]["key"];

	TestTools.ЗаписатьЛог(_Результат, "UpdateHandlersKey");
	
КонецПроцедуры

&Порядок(12)
&Тест
Процедура SetHandlerArgument() Экспорт

	Опции = Новый Структура;
	Опции.Вставить("proj"   , ПутьПроекта);
	Опции.Вставить("handler", КлючОбработчика);
	Опции.Вставить("arg"    , "text");
	Опции.Вставить("value"  , "Hello world!");
	Опции.Вставить("strict" , Истина);

	_Результат = TestTools.ВыполнитьТестCLI("SetHandlerArgument", Опции);
	
	Ожидаем.Что(_Результат["result"]).Равно(Истина);

	TestTools.ЗаписатьЛог(_Результат, "SetHandlerArgument");
	
КонецПроцедуры

&Порядок(13)
&Тест
Процедура GetHandlerArguments() Экспорт

	Опции = Новый Структура;
	Опции.Вставить("proj"   , ПутьПроекта);
	Опции.Вставить("handler", КлючОбработчика);

	_Результат = TestTools.ВыполнитьТестCLI("GetHandlerArguments", Опции);
	
	Ожидаем.Что(_Результат["result"]).Равно(Истина);
	Ожидаем.Что(_Результат["data"]).ИмеетТип("Массив").ИмеетДлину(1);

	TestTools.ЗаписатьЛог(_Результат, "GetHandlerArguments");
	
КонецПроцедуры

&Порядок(14)
&Тест
Процедура ClearHandlerArguments() Экспорт

	Опции = Новый Структура;
	Опции.Вставить("proj"   , ПутьПроекта);
	Опции.Вставить("handler", КлючОбработчика);

	_Результат = TestTools.ВыполнитьТестCLI("ClearHandlerArguments", Опции);
	
	Ожидаем.Что(_Результат["result"]).Равно(Истина);

	Результат = TestTools.ВыполнитьТестCLI("GetHandlerArguments", Опции);
	
	Ожидаем.Что(Результат["result"]).Равно(Истина);
	Ожидаем.Что(Результат["data"]).ИмеетТип("Массив").ИмеетДлину(0);
	
	TestTools.ЗаписатьЛог(_Результат, "ClearHandlerArguments");
	
КонецПроцедуры

&Порядок(15)
&Тест
Процедура UpdateUIPassword() Экспорт
	
	Опции = Новый Структура;
	Опции.Вставить("proj" , ПутьПроекта);
	Опции.Вставить("pass" , "newpassword");
	
	Результат = TestTools.ВыполнитьТестCLI("UpdateUIPassword", Опции);
	
	Ожидаем.Что(Результат["result"]).Равно(Истина);
	
	TestTools.ЗаписатьЛог(Результат, "UpdateUIPassword");
	
	Опции.Удалить("pass");
		
	Результат = TestTools.ВыполнитьТестCLI("GetProjectSettings", Опции, Ложь);
	Pass      = Ложь;
	
	Для Каждого ТекущаяНастройка Из Результат["data"] Цикл
		
		Если ТекущаяНастройка["name"] = "ui_password" Тогда
			Ожидаем.Что(ТекущаяНастройка["value"]).Равно("newpassword");
			Pass = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Ожидаем.Что(Pass).Равно(Истина);
	
КонецПроцедуры

&Порядок(16)
&Тест
Процедура DeleteRequestsHandler() Экспорт

	Опции = Новый Структура;
	Опции.Вставить("proj"   , ПутьПроекта);
	Опции.Вставить("handler", КлючОбработчика);

	_Результат = TestTools.ВыполнитьТестCLI("DeleteRequestsHandler", Опции);
	
	Ожидаем.Что(_Результат["result"]).Равно(Истина);
	Ожидаем.Что(_Результат["tables"]["handlers"]).Равно(Истина);
	Ожидаем.Что(_Результат["tables"]["arguments"]).Равно(Истина);
	
	Результат = TestTools.ВыполнитьТестCLI("GetRequestsHandler", Опции, Ложь);

	Ожидаем.Что(Результат["result"]).Равно(Ложь);

	TestTools.ЗаписатьЛог(_Результат, "DeleteRequestsHandler");
	
КонецПроцедуры

#КонецОбласти