#Использовать oint

Перем ПутьСервера;
Перем СоединениеRO;
Перем СписокСеансов;
Перем ОбработчикСеансов;

#Область СлужебныйПрограммныйИнтерфейс

Функция Инициализировать(ПутьСервера_, СоединениеRO_, ОбработчикСеансов_) Экспорт

	СоединениеRO      = СоединениеRO_;
	ПутьСервера       = ПутьСервера_;
	ОбработчикСеансов = ОбработчикСеансов_;

КонецФункции

Функция ОсновнаяОбработка(Знач Контекст, Знач Путь) Экспорт

	Результат = Неопределено;

	Если Путь = "ui" Тогда

		ВернутьСтраницуUI(Контекст);

	ИначеЕсли Путь = "ui/login" Тогда

		Результат = АвторизоватьСеанс(Контекст);

	ИначеЕсли Путь = "ui/logout" Тогда

		ОбработчикСеансов.УдалитьСеанс(Контекст);
		Перенаправление(Контекст, "/ui");

	Иначе
		Результат = ОшибкаОбработки(Контекст, 404, "Not found");
	КонецЕсли;

    Возврат Результат;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ОшибкаОбработки(Контекст, Код, Текст)

    Контекст.Ответ.КодСостояния = Код;

    Возврат Новый Структура("result,error", Ложь, Текст);

КонецФункции

Процедура ВернутьСтраницуUI(Контекст)

	Контекст.Ответ.КодСостояния = 200;

	Если ОбработчикСеансов.АвторизованныйСеанс(Контекст) Тогда 

		ВернутьСтраницуHTML(Контекст, "console.html");

	Иначе

		ВернутьСтраницуHTML(Контекст, "login.html");

	КонецЕсли;

КонецПроцедуры

Процедура ВернутьСтраницуHTML(Контекст, Путь)

	ПутьОтвета   = Контекст.Ответ.Тело;
	ЗаписьОтвета = Новый ЗаписьДанных(ПутьОтвета);

	ПолныйПутьФайла = СтрШаблон("%1/%2", ПутьСервера, Путь);
	ЗаписьОтвета.Записать(Новый ДвоичныеДанные(ПолныйПутьФайла));

	ЗаписьОтвета.Закрыть();

КонецПроцедуры

Функция АвторизоватьСеанс(Контекст)

	Результат = ОбработчикСеансов.АвторизоватьСеанс(Контекст);

	Если Результат["result"] Тогда
		Перенаправление(Контекст, "/ui");
	Иначе
		Перенаправление(Контекст, "/ui?error=true");
	КонецЕсли;

	Возврат Неопределено;

КонецФункции

Функция Перенаправление(Контекст, Путь)
	Контекст.Ответ.КодСостояния = 303;
	Контекст.Ответ.Заголовки["Location"] = Путь;
КонецФункции

#КонецОбласти