#Использовать asserts
#Использовать oint
#Использовать "./internal"

Перем TestTools;

#Область Тесты

&ТестовыйНабор(Характер = "Одиночка")
Процедура ПриСозданииОбъекта()
	
	TestTools = Новый TestTools("ru");
	
	
КонецПроцедуры

&ПараметризованныйТест
&ИсточникЗначение("1921", "R:\DockerVolumes\Melezh-RPM-RU")
Процедура Get(Порт, КаталогПроекта) Экспорт
	
	Результат = OPI_ЗапросыHTTP
	.НовыйЗапрос()
	.Инициализировать(СтрШаблон("http://localhost:%1/echo_get", Порт))
	.УстановитьПараметрыURL(Новый Структура("field3,field2", "New field3", "New field2"))
	.ОбработатьЗапрос("GET")
	.ВернутьОтветКакJSONКоллекцию();
	
	Если ТипЗнч(Результат) = Тип("OPI_HTTPКлиент") Тогда
		Результат = Результат.ПолучитьЛог();
	КонецЕсли;
	
	Ожидаем.Что(Результат["result"]).Равно(Истина);
	Ожидаем.Что(Результат["data"]["field1"]).Равно("Field 1 value");
	Ожидаем.Что(Результат["data"]["field2"]).Равно("Field 2 value (strict)");
	Ожидаем.Что(Результат["data"]["field3"]).Равно("New field3");
	
	Логи = ПолучитьЛоги(КаталогПроекта + "\logs\echo_get");
	
КонецПроцедуры

#КонецОбласти

Функция ПолучитьЛоги(КаталогПроекта)
	
	ФайлыЛогов      = НайтиФайлы(КаталогПроекта, "*", Истина);
	МассивПутей     = Новый Массив;
	МассивКаталогов = Новый Массив;
	Логи            = Новый Соответствие();
	
	Для Каждого Файл Из ФайлыЛогов Цикл
		
		Если Файл.ЭтоКаталог() Тогда
			МассивКаталогов.Добавить(Файл.ПолноеИмя);
			Продолжить;
		Иначе
			
			Если Файл.Имя = "req.info" Тогда
				Логи.Вставить("Инфо", ПрочестьJSONФайл(Файл.ПолноеИмя));
			ИначеЕсли Файл.Имя = "req.headers" Тогда
				Логи.Вставить("Заголовки", ПрочестьJSONФайл(Файл.ПолноеИмя));
			ИначеЕсли Файл.Имя = "req.body" Тогда
				Логи.Вставить("Тело", ПрочестьJSONФайл(Файл.ПолноеИмя));
			ИначеЕсли Файл.Имя = "res.body" Тогда
				Логи.Вставить("Ответ", ПрочестьJSONФайл(Файл.ПолноеИмя));
			ИначеЕсли Файл.Имя = "error.json" Тогда
				ВызватьИсключение ПрочестьJSONФайл(Файл.ПолноеИмя);
			КонецЕсли;
			
			МассивПутей.Добавить(Файл.ПолноеИмя);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого Путь Из МассивПутей Цикл
		УдалитьФайлы(Путь);
	КонецЦикла;
	
	Для Каждого Каталог Из МассивКаталогов Цикл
		Попытка
		УдалитьФайлы(Каталог);
		Исключение Продолжить; КонецПопытки;
	КонецЦикла;

	Возврат Логи;
	
КонецФункции

Функция ПрочестьJSONФайл(Знач Путь)
	
	ЧтениеJSON = Новый ЧтениеJSON();
	ЧтениеJSON.ОткрытьФайл(Путь);
	Результат  = ПрочитатьJSON(ЧтениеJSON, Истина);
	ЧтениеJSON.Закрыть();

	Возврат Результат;

КонецФункции