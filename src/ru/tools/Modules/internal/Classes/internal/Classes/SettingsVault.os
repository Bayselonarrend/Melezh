#Использовать "./internal"

Перем НастройкиПроектаПолные;
Перем НастройкиПроектаUI;
Перем НастройкиПроекта;

Перем МенеджерСоединений;
Перем МодульПрокси;

#Область СлужебныйПрограммныйИнтерфейс

Процедура Инициализировать(МенеджерСоединений_, МодульПрокси_) Экспорт
	
	МодульПрокси        = МодульПрокси_;
	МенеджерСоединений  = МенеджерСоединений_;
	
	ЗаполнитьНастройки();
	
КонецПроцедуры

Функция ВернутьНастройкиПроектаПолные() Экспорт
	
	Возврат НастройкиПроектаПолные;
	
КонецФункции

Функция ВернутьНастройкиПроектаUI() Экспорт
	
	Возврат НастройкиПроектаUI;
	
КонецФункции

Функция ВернутьНастройку(Знач Имя) Экспорт
	
	Возврат НастройкиПроекта.Получить(Имя);
	
КонецФункции

Функция ЗаписатьНастройкиПроекта(Знач Данные) Экспорт
	
	СоединениеRW = МенеджерСоединений.ПолучитьСоединениеRW();
	Результат    = МодульПрокси.ЗаполнитьНастройкиПроекта(СоединениеRW, Данные);
	ЗаполнитьНастройки();
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНастройки()
	
	СоединениеRO    = МенеджерСоединений.ПолучитьСоединениеRO();
	НастройкиИзБазы = МодульПрокси.ПолучитьНастройкиПроекта(СоединениеRO);
	
	Если Не НастройкиИзБазы["result"] Тогда
		ВызватьИсключение НастройкиИзБазы["error"];	
	КонецЕсли;
	
	НастройкиПроектаПолные = НастройкиИзБазы;
	НастройкиПроекта       = Новый Соответствие();
	ТаблицаНастроекUI      = Новый Массив;
	
	Для Каждого Настройка Из НастройкиИзБазы["data"] Цикл

		НастройкиПроекта.Вставить(Настройка["name"], Настройка["value"]);

		Если Не Настройка["name"] = "ui_password" Тогда
			ТаблицаНастроекUI.Добавить(Настройка);
		КонецЕсли;

	КонецЦикла;

	НастройкиПроектаUI = Новый Структура("result,data", истина, ТаблицаНастроекUI);
	
КонецПроцедуры

#КонецОбласти
