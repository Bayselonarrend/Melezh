#Использовать asserts
#Использовать "./internal"

Перем ПутьПроекта;
Перем КлючОбработчика;

#Область Тесты

&ТестовыйНабор(Характер = "Одиночка")
Процедура ПриСозданииОбъекта()
	
	Если Не ЗначениеЗаполнено(ПутьПроекта) Тогда
		ПутьПроекта = ПолучитьИмяВременногоФайла();
		
		Опции = Новый Структура;
		Опции.Вставить("path", ПутьПроекта);
		
		Результат = TestTools.ВыполнитьТестCLI("СоздатьПроект", Опции);	
	КонецЕсли;
	
КонецПроцедуры

&Порядок(1)
&Тест
Процедура СоздатьПроект() Экспорт
	
	Проект = ПолучитьИмяВременногоФайла();
	
	Опции = Новый Структура;
	Опции.Вставить("path", Проект);
	
	Результат = TestTools.ВыполнитьТестCLI("СоздатьПроект", Опции);
	
	Ожидаем.Что(Результат["path"]).Равно(Проект);
	Ожидаем.Что(Результат["result"]).Равно(Истина);
	
	TestTools.ЗаписатьЛог(Результат, "СоздатьПроект");
	
	УдалитьФайлы(Проект);
	
КонецПроцедуры

&Порядок(2)
&Тест
Процедура ПолучитьНастройкиПроекта() Экспорт
	
	Опции = Новый Структура;
	Опции.Вставить("proj", ПутьПроекта);
	
	Результат = TestTools.ВыполнитьТестCLI("ПолучитьНастройкиПроекта", Опции);
	
	Ожидаем.Что(Результат["result"]).Равно(Истина);
	Ожидаем.Что(Результат["data"]).ИмеетТип("Массив");
	
	TestTools.ЗаписатьЛог(Результат, "ПолучитьНастройкиПроекта");
	
КонецПроцедуры

&Порядок(3)
&Тест
Процедура ЗаполнитьНастройкиПроекта() Экспорт
	
	Настройки = Новый Соответствие();
	Настройки.Вставить("logs_req_headers", Ложь);
	Настройки.Вставить("logs_req_body"   , Ложь);
	
	Опции = Новый Структура;
	Опции.Вставить("proj", ПутьПроекта);
	Опции.Вставить("set" , Настройки);
	
	Результат = TestTools.ВыполнитьТестCLI("ЗаполнитьНастройкиПроекта", Опции);
	
	Ожидаем.Что(Результат["result"]).Равно(Истина);
	
	TestTools.ЗаписатьЛог(Результат, "ЗаполнитьНастройкиПроекта");
	
	Опции.Удалить("set");
	
	Результат = TestTools.ВыполнитьТестCLI("ПолучитьНастройкиПроекта", Опции, Ложь);
	Headers   = Ложь;
	Body      = Ложь;
	
	Для Каждого ТекущаяНастройка Из Результат["data"] Цикл
		
		Если ТекущаяНастройка["name"] = "logs_req_headers" Тогда
			Ожидаем.Что(ТекущаяНастройка["value"]).Равно("false");
			Headers = Истина;
		КонецЕсли;
		
		Если ТекущаяНастройка["name"] = "logs_req_body" Тогда
			Ожидаем.Что(ТекущаяНастройка["value"]).Равно("false");
			Body = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Ожидаем.Что(Headers И Body).Равно(Истина);
	
КонецПроцедуры

&Порядок(4)
&Тест
Процедура УстановитьНастройкуПроекта() Экспорт
	
	Опции = Новый Структура;
	Опции.Вставить("proj" , ПутьПроекта);
	Опции.Вставить("key"  , "logs_path");
	Опции.Вставить("value", "yo");
	
	Результат = TestTools.ВыполнитьТестCLI("УстановитьНастройкуПроекта", Опции);
	
	Ожидаем.Что(Результат["result"]).Равно(Истина);
	
	TestTools.ЗаписатьЛог(Результат, "УстановитьНастройкуПроекта");
	
	Опции.Удалить("key");
	Опции.Удалить("value");
	
	Результат = TestTools.ВыполнитьТестCLI("ПолучитьНастройкиПроекта", Опции, Ложь);
	Path      = Ложь;
	
	Для Каждого ТекущаяНастройка Из Результат["data"] Цикл
		
		Если ТекущаяНастройка["name"] = "logs_path" Тогда
			Ожидаем.Что(ТекущаяНастройка["value"]).Равно("yo");
			Path = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Ожидаем.Что(Path).Равно(Истина);
	
КонецПроцедуры

&Порядок(5)
&Тест
Процедура ДобавитьОбработчикЗапросов() Экспорт
	
	Библиотека = "telegram";
	МетодОПИ   = "ОтправитьТекстовоеСообщение";
	МетодHTTP  = "get";
	
	Опции = Новый Структура;
	Опции.Вставить("proj"  , ПутьПроекта);
	Опции.Вставить("lib"   , Библиотека);
	Опции.Вставить("func"  , МетодОПИ);
	Опции.Вставить("method", МетодHTTP);
	
	Результат = TestTools.ВыполнитьТестCLI("ДобавитьОбработчикЗапросов", Опции);
	
	КлючОбработчика = Результат["key"];
	
	Ожидаем.Что(Результат["result"]).Равно(Истина);
	Ожидаем.Что(КлючОбработчика).Заполнено();
	Ожидаем.Что(Результат["url_example"]).Заполнено();
	
	TestTools.ЗаписатьЛог(Результат, "ДобавитьОбработчикЗапросов");	
	
КонецПроцедуры

&Порядок(6)
&Тест
Процедура ПолучитьСписокОбработчиковЗапросов() Экспорт
	
	Опции = Новый Структура;
	Опции.Вставить("proj", ПутьПроекта);
	
	Результат = TestTools.ВыполнитьТестCLI("ПолучитьСписокОбработчиковЗапросов", Опции);
	
	Ожидаем.Что(Результат["result"]).Равно(Истина);
	Ожидаем.Что(Результат["data"]).ИмеетТип("Массив").ИмеетДлину(1);
	
	TestTools.ЗаписатьЛог(Результат, "ПолучитьСписокОбработчиковЗапросов");
	
КонецПроцедуры

&Порядок(7)
&Тест
Процедура ПолучитьОбработчикЗапросов() Экспорт

	Опции = Новый Структура;
	Опции.Вставить("proj"   , ПутьПроекта);
	Опции.Вставить("handler", КлючОбработчика);

	Результат = TestTools.ВыполнитьТестCLI("ПолучитьОбработчикЗапросов", Опции);
	
	Ожидаем.Что(Результат["result"]).Равно(Истина);
	Ожидаем.Что(Результат["data"]).ИмеетТип("Соответствие");
	Ожидаем.Что(Результат["data"]["function"]).Равно("ОтправитьТекстовоеСообщение");
	Ожидаем.Что(Результат["data"]["library"]).Равно("telegram");
	Ожидаем.Что(Результат["data"]["method"]).Равно("GET");
	Ожидаем.Что(Результат["data"]["key"]).Равно(КлючОбработчика);
	Ожидаем.Что(Результат["data"]["active"]).Равно(1);
	Ожидаем.Что(Результат["data"]["args"]).ИмеетТип("Массив").ИмеетДлину(0);
	
	TestTools.ЗаписатьЛог(Результат, "ПолучитьСписокОбработчиковЗапросов");

КонецПроцедуры

&Порядок(8)
&Тест

Процедура ИзменитьОбработчикЗапросов() Экспорт

	Опции = Новый Структура;
	Опции.Вставить("proj"   , ПутьПроекта);
	Опции.Вставить("handler", КлючОбработчика);
	Опции.Вставить("lib"    , "vk");
	Опции.Вставить("func"   , "СоздатьПост");
	Опции.Вставить("method" , "FORM");

	_Результат = TestTools.ВыполнитьТестCLI("ИзменитьОбработчикЗапросов", Опции);

	Ожидаем.Что(_Результат["result"]).Равно(Истина);

	Опции = Новый Структура;
	Опции.Вставить("proj"   , ПутьПроекта);
	Опции.Вставить("handler", КлючОбработчика);

	Результат = TestTools.ВыполнитьТестCLI("ПолучитьОбработчикЗапросов", Опции, Ложь);

	Ожидаем.Что(Результат["result"]).Равно(Истина);
	Ожидаем.Что(Результат["data"]).ИмеетТип("Соответствие");
	Ожидаем.Что(Результат["data"]["function"]).Равно("СоздатьПост");
	Ожидаем.Что(Результат["data"]["library"]).Равно("vk");
	Ожидаем.Что(Результат["data"]["method"]).Равно("FORM");

	Опции = Новый Структура;
	Опции.Вставить("proj"   , ПутьПроекта);
	Опции.Вставить("handler", КлючОбработчика);
	Опции.Вставить("lib"    , "airtable");

	Результат = TestTools.ВыполнитьТестCLI("ИзменитьОбработчикЗапросов", Опции, Ложь);

	Ожидаем.Что(Результат["result"]).Равно(Истина);

	Опции = Новый Структура;
	Опции.Вставить("proj"   , ПутьПроекта);
	Опции.Вставить("handler", КлючОбработчика);

	Результат = TestTools.ВыполнитьТестCLI("ПолучитьОбработчикЗапросов", Опции, Ложь);

	Ожидаем.Что(Результат["result"]).Равно(Истина);
	Ожидаем.Что(Результат["data"]).ИмеетТип("Соответствие");
	Ожидаем.Что(Результат["data"]["function"]).Равно("СоздатьПост");
	Ожидаем.Что(Результат["data"]["library"]).Равно("airtable");
	Ожидаем.Что(Результат["data"]["method"]).Равно("FORM");

	TestTools.ЗаписатьЛог(_Результат, "ПолучитьСписокОбработчиковЗапросов");

	Опции = Новый Структура;
	Опции.Вставить("proj"   , ПутьПроекта);
	Опции.Вставить("handler", КлючОбработчика);
	Опции.Вставить("lib"    , "vk");

	Результат = TestTools.ВыполнитьТестCLI("ИзменитьОбработчикЗапросов", Опции, Ложь);

КонецПроцедуры

&Порядок(9)
&Тест
Процедура ОтключитьОбработчикЗапросов() Экспорт

	Опции = Новый Структура;
	Опции.Вставить("proj"   , ПутьПроекта);
	Опции.Вставить("handler", КлючОбработчика);

	_Результат = TestTools.ВыполнитьТестCLI("ОтключитьОбработчикЗапросов", Опции);
	
	Ожидаем.Что(_Результат["result"]).Равно(Истина);
	
	Результат = TestTools.ВыполнитьТестCLI("ПолучитьОбработчикЗапросов", Опции, Ложь);

	Ожидаем.Что(Результат["result"]).Равно(Истина);
	Ожидаем.Что(Результат["data"]["active"]).Равно(0);

	TestTools.ЗаписатьЛог(_Результат, "ОтключитьОбработчикЗапросов");
	
КонецПроцедуры

&Порядок(10)
&Тест
Процедура ВключитьОбработчикЗапросов() Экспорт

	Опции = Новый Структура;
	Опции.Вставить("proj"   , ПутьПроекта);
	Опции.Вставить("handler", КлючОбработчика);

	_Результат = TestTools.ВыполнитьТестCLI("ВключитьОбработчикЗапросов", Опции);
	
	Ожидаем.Что(_Результат["result"]).Равно(Истина);
	
	Результат = TestTools.ВыполнитьТестCLI("ПолучитьОбработчикЗапросов", Опции, Ложь);

	Ожидаем.Что(Результат["result"]).Равно(Истина);
	Ожидаем.Что(Результат["data"]["active"]).Равно(1);

	TestTools.ЗаписатьЛог(_Результат, "ВключитьОбработчикЗапросов");
	
КонецПроцедуры

&Порядок(11)
&Тест
Процедура ОбновитьКлючОбработчика() Экспорт

	Опции = Новый Структура;
	Опции.Вставить("proj"   , ПутьПроекта);
	Опции.Вставить("handler", КлючОбработчика);

	_Результат = TestTools.ВыполнитьТестCLI("ОбновитьКлючОбработчика", Опции);
	
	Ожидаем.Что(_Результат["result"]).Равно(Истина);
	Ожидаем.Что(_Результат["data"]["key"] = КлючОбработчика).Равно(Ложь);

	КлючОбработчика = _Результат["data"]["key"];

	Опции = Новый Структура;
	Опции.Вставить("proj"   , ПутьПроекта);
	Опции.Вставить("handler", КлючОбработчика);
	Опции.Вставить("key"    , "my-key");

	Результат = TestTools.ВыполнитьТестCLI("ОбновитьКлючОбработчика", Опции);

	Ожидаем.Что(Результат["result"]).Равно(Истина);
	Ожидаем.Что(Результат["data"]["key"]).Равно("my-key");

	КлючОбработчика = Результат["data"]["key"];

	TestTools.ЗаписатьЛог(_Результат, "ОбновитьКлючОбработчика");
	
КонецПроцедуры

&Порядок(12)
&Тест
Процедура УстановитьАргументОбработчика() Экспорт

	Опции = Новый Структура;
	Опции.Вставить("proj"   , ПутьПроекта);
	Опции.Вставить("handler", КлючОбработчика);
	Опции.Вставить("arg"    , "text");
	Опции.Вставить("value"  , "Hello world!");
	Опции.Вставить("strict" , Истина);

	_Результат = TestTools.ВыполнитьТестCLI("УстановитьАргументОбработчика", Опции);
	
	Ожидаем.Что(_Результат["result"]).Равно(Истина);

	TestTools.ЗаписатьЛог(_Результат, "УстановитьАргументОбработчика");
	
КонецПроцедуры

&Порядок(13)
&Тест
Процедура ПолучитьАргументыОбработчика() Экспорт

	Опции = Новый Структура;
	Опции.Вставить("proj"   , ПутьПроекта);
	Опции.Вставить("handler", КлючОбработчика);

	_Результат = TestTools.ВыполнитьТестCLI("ПолучитьАргументыОбработчика", Опции);
	
	Ожидаем.Что(_Результат["result"]).Равно(Истина);
	Ожидаем.Что(_Результат["data"]).ИмеетТип("Массив").ИмеетДлину(1);

	TestTools.ЗаписатьЛог(_Результат, "ПолучитьАргументыОбработчика");
	
КонецПроцедуры

&Порядок(14)
&Тест
Процедура ОчиститьАргументыОбработчика() Экспорт

	Опции = Новый Структура;
	Опции.Вставить("proj"   , ПутьПроекта);
	Опции.Вставить("handler", КлючОбработчика);

	_Результат = TestTools.ВыполнитьТестCLI("ОчиститьАргументыОбработчика", Опции);
	
	Ожидаем.Что(_Результат["result"]).Равно(Истина);

	Результат = TestTools.ВыполнитьТестCLI("ПолучитьАргументыОбработчика", Опции);
	
	Ожидаем.Что(Результат["result"]).Равно(Истина);
	Ожидаем.Что(Результат["data"]).ИмеетТип("Массив").ИмеетДлину(0);
	
	TestTools.ЗаписатьЛог(_Результат, "ОчиститьАргументыОбработчика");
	
КонецПроцедуры

&Порядок(15)
&Тест
Процедура УдалитьОбработчикЗапросов() Экспорт

	Опции = Новый Структура;
	Опции.Вставить("proj"   , ПутьПроекта);
	Опции.Вставить("handler", КлючОбработчика);

	_Результат = TestTools.ВыполнитьТестCLI("УдалитьОбработчикЗапросов", Опции);
	
	Ожидаем.Что(_Результат["result"]).Равно(Истина);
	Ожидаем.Что(_Результат["tables"]["handlers"]).Равно(Истина);
	Ожидаем.Что(_Результат["tables"]["arguments"]).Равно(Истина);
	
	Результат = TestTools.ВыполнитьТестCLI("ПолучитьОбработчикЗапросов", Опции, Ложь);

	Ожидаем.Что(Результат["result"]).Равно(Ложь);

	TestTools.ЗаписатьЛог(_Результат, "УдалитьОбработчикЗапросов");
	
КонецПроцедуры

#КонецОбласти