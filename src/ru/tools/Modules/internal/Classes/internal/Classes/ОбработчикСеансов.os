#Использовать "./internal"

Перем СписокСеансов;
Перем ПутьПроекта;
Перем ХранилищеНастроек;

#Область СлужебныйПрограммныйИнтерфейс

Процедура Инициализировать(ПутьПроекта_, ХранилищеНастроек_) Экспорт
	
	СписокСеансов      = Новый Соответствие;
	ПутьПроекта        = ПутьПроекта_;
	ХранилищеНастроек  = ХранилищеНастроек_;
	
КонецПроцедуры

Функция АвторизоватьСеанс(Контекст) Экспорт
	
	Результат = Ложь;
	
	Если Контекст.Запрос.Метод <> "POST" Тогда
		Возврат Инструментарий.ОшибкаОбработки(Контекст, 405, "Method Not Allowed");
	КонецЕсли;
	
	ДлинаКонтента = Контекст.Запрос.ДлинаКонтента;
	ДлинаКонтента = ?(ДлинаКонтента = Неопределено, 0, ДлинаКонтента);
	
	Если ДлинаКонтента > 50000 Тогда
		Возврат Инструментарий.ОшибкаОбработки(Контекст, 413, "Payload Too Large");
	КонецЕсли;
	
	ТелоЗапроса  = Контекст.Запрос.Тело;
	
	Попытка
		Пароль = Контекст.Запрос.Форма["password"][0];
	Исключение
		Возврат Инструментарий.ОшибкаОбработки(Контекст, 400, "Bad Request");
	КонецПопытки;
	
	Если Пароль = ПарольПроекта() Тогда
		
		Печенье = Строка(Новый УникальныйИдентификатор());
		
		Пока СписокСеансов.Получить(Печенье) <> Неопределено Цикл
			Печенье = Строка(Новый УникальныйИдентификатор());
		КонецЦикла;
		
		СписокСеансов.Вставить(Печенье, Истина);
		
		Контекст.Ответ.Куки.Добавить("melezh", Печенье);
		Контекст.Ответ.КодСостояния = 200;
		
		Результат = Новый Структура("result", Истина);
		
	Иначе
		
		Результат = Инструментарий.ОшибкаОбработки(Контекст, 400, "Неверный пароль!");
		
	КонецЕсли;
	
	ВыполнитьСборкуМусора();
	
	Возврат Результат;
	
КонецФункции

Функция АвторизованныйСеанс(Контекст) Экспорт
	
	ТокенАвторизации = ПолучитьАвторизациюCookie(Контекст);
	
	Если ЗначениеЗаполнено(ТокенАвторизации) Тогда
		
		Авторизован = СписокСеансов.Получить(ТокенАвторизации);
		Авторизован = ?(ЗначениеЗаполнено(Авторизован), Авторизован, Ложь);
		
	Иначе
		Авторизован = Ложь;
	КонецЕсли;
	
	Возврат Авторизован;
	
КонецФункции

Процедура УдалитьСеанс(Контекст) Экспорт
	
	ТокенАвторизации = ПолучитьАвторизациюCookie(Контекст);
	СписокСеансов.Удалить(ТокенАвторизации);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьАвторизациюCookie(Контекст)
	
	Печеньки = Контекст.Запрос.Куки;
	Токен    = "";
	
	Для Каждого Печенька Из Печеньки Цикл
		
		Если Печенька.Ключ = "melezh" Тогда
			Токен = Печенька.Значение;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Токен;
	
КонецФункции

Функция ПарольПроекта()
	
	СоединениеRO = Инструментарий.СоздатьСоединениеRO(ПутьПроекта);
	
	Пароль = ХранилищеНастроек.ВернутьНастройку("ui_password");
	
	Если Пароль = Неопределено Тогда
		ВызватьИсключение "Пароль UI не был найден в настройках проекта. Возможно, файл проекта поврежден!";
	Иначе
		Возврат Пароль;
	КонецЕсли;
	
КонецФункции

#КонецОбласти