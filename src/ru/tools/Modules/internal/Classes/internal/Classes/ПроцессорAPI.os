#Использовать oint

Перем МодульПрокси;
Перем СоединениеRO;
Перем ПутьПроекта;
Перем ОбработчикСеансов;

#Область СлужебныйПрограммныйИнтерфейс

Функция Инициализировать(МодульПрокси_, СоединениеRO_, ПутьПроекта_, ОбработчикСеансов_) Экспорт

	МодульПрокси      = МодульПрокси_;
	СоединениеRO      = СоединениеRO_;
	ПутьПроекта       = ПутьПроекта_;
	ОбработчикСеансов = ОбработчикСеансов_;

КонецФункции

Функция ОсновнаяОбработка(Знач Контекст, Знач Путь) Экспорт

	Если Не ОбработчикСеансов.АвторизованныйСеанс(Контекст) Тогда
		Возврат ОшибкаОбработки(Контекст, 401, "Unauthorized. This API for UI purposes only");
	КонецЕсли;

	ЧастиПути = СтрРазделить(Путь, "/");
	НеНайдено = Ложь;
	Результат = Неопределено;

	Если ЧастиПути.Количество() >= 2 Тогда
		
		Команда = нРег(ЧастиПути[1]);

		Если Команда = "gethandlerslist" Тогда
			Результат = ВернутьСписокОбработчиков();
		ИначеЕсли Команда = "updatestatus" Тогда
			Результат = ИзменитьСтатусОбработчика(Контекст);
		Иначе
			НеНайдено = Истина;
		КонецЕсли;

	Иначе
		НеНайдено = Истина;
	КонецЕсли;

	Если НеНайдено Тогда
		Результат = ОшибкаОбработки(Контекст, 404, "Not Found");
	КонецЕсли;

    Возврат Результат;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ВернутьСписокОбработчиков()

	Результат = МодульПрокси.ПолучитьСписокОбработчиковЗапросов(СоединениеRO);

	Возврат Результат;

КонецФункции

Функция ИзменитьСтатусОбработчика(Контекст)

	Результат = Неопределено;

	Попытка

		КлючОбработчика   = Контекст.Запрос.Форма["key"][0];
		СтатусОбработчика = Контекст.Запрос.Форма["active"][0];

		Если СтатусОбработчика = "0" Тогда
			Результат = МодульПрокси.ОтключитьОбработчикЗапросов(ПутьПроекта, КлючОбработчика);
		Иначе
			Результат = МодульПрокси.ВключитьОбработчикЗапросов(ПутьПроекта, КлючОбработчика);
		КонецЕсли;

		Если Результат["result"] Тогда
			Контекст.Ответ.КодСостояния = 200;
		Иначе
			Результат = ОшибкаОбработки(Контекст, "400", Результат["error"]);
		КонецЕсли;

	Исключение
		Результат = ОшибкаОбработки(Контекст, "400", ОписаниеОшибки());
	КонецПопытки;

	Возврат Результат;

КонецФункции

Функция ОшибкаОбработки(Контекст, Код, Текст)

    Контекст.Ответ.КодСостояния = Код;

    Возврат Новый Структура("result,error", Ложь, Текст);

КонецФункции

#КонецОбласти